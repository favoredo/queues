services:
  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    user: "root"
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=1
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CLUSTER_ID=cluster-1
      - KAFKA_LOG_DIRS=/opt/kafka/data
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_NUM_PARTITIONS=2
    volumes:
      - kafka_data:/opt/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "/opt/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 30s
      retries: 20
      start_period: 40s

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=test-topic

  consumer1:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: consumer1
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=test-topic
      - KAFKA_GROUP_ID=test-group
      - KAFKA_CLIENT_ID=consumer1
  
  consumer2:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    container_name: consumer2
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=test-topic
      - KAFKA_GROUP_ID=test-group
      - KAFKA_CLIENT_ID=consumer2

volumes:
  kafka_data:
    driver: local
